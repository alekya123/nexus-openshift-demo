apiVersion: v1
kind: Template
metadata:
  name: cicd
labels:
  template: cicd
  group: cicd
metadata:
  annotations:
    description: Creates the CI/CD infrastructure with Jenins and Nexus
    iconClass: icon-jenkins
    tags: instant-app,jenkins,nexus,cicd
  name: cicd
message: The CI/CD infrastructure composed of Jenkins and Nexus Repository services has been created in your project.  Jenkins username/password are admin/${JENKINS_PASSWORD}.  The tutorial at https://github.com/OpenShiftDemos/openshift-cd-demo/tree/openshift-3.3 contains more information about using this CI/CD demo.
objects:
# Sonatype Nexus
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: nexus
    name: sonartype-nexus-base
  spec:
    tags:
    - annotations:
        description: The SonarType's Base Nexus Docker image
      from:
        kind: DockerImage
        name: sonatype/nexus:2.13.0-01
      importPolicy: {}
- apiVersion: v1
kind: BuildConfig
metadata:
  labels:
    app: nexus
  name: nexus
spec:
  output:
    to:
      kind: ImageStreamTag
      name: nexus:latest
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    git:
      ref: master
      uri: https://github.com/domenicbove/nexus-openshift-demo
    type: Git
    contextDir: nexus
  strategy:
    dockerStrategy:
      from:
        kind: ImageStreamTag
        name: sonartype-nexus-base:latest
    type: Docker
  triggers:
  - github:
      secret: 1802aa5420b11b2c
    type: GitHub
  - imageChange: {}
    type: ImageChange
status:
  lastVersion: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: nexus
  spec: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Sonatype Nexus repository manager's http port
    labels:
      app: nexus
    name: nexus
  spec:
    ports:
    - name: web
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: nexus
      deploymentconfig: nexus
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: nexus
    name: nexus
  spec:
    port:
      targetPort: web
    to:
      kind: Service
      name: nexus
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: nexus
    name: nexus
  spec:
    replicas: 1
    selector:
      app: nexus
      deploymentconfig: nexus
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: nexus
          deploymentconfig: nexus
      spec:
        containers:
        - image: ' '
          imagePullPolicy: Always
          name: nexus
          ports:
          - containerPort: 8081
            protocol: TCP
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            httpGet:
              port: 8081
              path: /content/groups/public
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            httpGet:
              port: 8081
              path: /content/groups/public
            timeoutSeconds: 5
          resources:
            limits:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/nexus-work
            name: nexus-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: nexus-data
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nexus
        from:
          kind: ImageStreamTag
          name: nexus:latest
      type: ImageChange
  status: {}
